.nav {
    background-color: antiquewhite;

    --img1: scale(1);
    /* Show '☰' element */
    --img2: scale(0);
    /* Hide 'X' element */
}
/* Navigation bar */

.nav:has( .dropdown:target) {
    --img1: scale(0);
    /* Hide '☰' element */
    --img2: scale(1);
    /* Show 'X' element */
}
/* The pseudoclass 'target' indicates when an element has been targeted by anchors or links.
This rule closes the circuit and creates a switch:  

Everytime an user clicks the anchor '☰' will add a target to the element with class '.dropdown' (the nav-links tab menu; 'ul' element. 

Whenever this class is being targeted, swap the property variables (scale 0 / 1), hidding the icon '☰' and showing 'X' icon. 

If the user touches the anchor 'X', as it is referencing other thing than '.dropdown', this class stops being targeted, thus this rule doesn't apply and this transform properties return to '.nav''s rule values. */

.nav__container {
    width: 90%;
    margin: 0 auto;
    height: 70px;

    display: grid;
    grid-template-columns: max-content max-content;
    grid-template-areas: "title img";
    justify-content: space-between;
    align-items: center;
    
    overflow: hidden;
}
/* top-header */

.nav__title {
    color: black;
    grid-area: title;
}
/* Home */

.nav__menu {
    grid-area: img;
    position: relative;
    z-index: 10;
    /* Icons will be always at the front */

    transform: var(--img1);
    /* Is a control property to change wich img will be shown: 
    Works as a switch ON as it scales the img to 1*/
}
/* buttons */

.nav__menu--second {
    transform: var(--img2);
    /* Works as a switch OFF  as it scales the image to 0*/
    /* Wouldn't be better to name them as ON/OFF? */
}

.nav__icon {
    width: 30px;
    display: block;
}
/* Controls the icon's size */

.dropdown {
    position: absolute;
    /* This also stop messing with the elements position inside the top header (HOME and toogle menu icons), as it gets outside the grid. */
    
    background-color: darkgray;

    width: 75%;
    max-width: 300px;
    /* This can be optimized with a clamp */
    right: 0;
    top: 0;
    bottom: 0;
    /* This will definitely change, but it's nice for the TOC component. */
    /* Position to the right side, from top to bottom.*/
    padding: 1em;
    /* --spacing-extra-small */

    display: grid;
    align-items: center;
    /* Nah uh. Not a fan. This must be changed.  */
    gap: 1rem;
    /* --spacing-small */
}

.dropdown__list {
    list-style: none;
    /* This would be alredy set-up. So it's not neccesary.. unless..
    Do BEM methodology don't use global settings? Investigate it.  */
}

.dropdown__link {
    color: black;
    /* Color variables */
    padding: 1em .7em;
    /* --Spacing-extra-small */
    text-decoration: none;
    /* This would be alredy set-up. So it's not neccesary.. unless its a bad practice for BEM methodolgy.
    If that the case.. I'll have a lot more job than expected when I will refactor the CSS stylesheet.*/

    display: flex;
    align-items: center;
    gap: .6rem;
}
