.nav {
    background-color: antiquewhite;

    --img1: scale(1);
    /* Show '☰' element */
    --img2: scale(0);
    /* Hide 'X' element */
}
/* Navigation bar */

.nav:has( .dropdown:target) {
    --img1: scale(0);
    /* Hide '☰' element */
    --img2: scale(1);
    /* Show 'X' element */
}
/* The pseudoclass 'target' indicates when an element has been targeted by anchors or links.
This rule closes the circuit and creates a switch:  

Everytime an user clicks the anchor '☰' will add a target to the element with class '.dropdown' (the nav-links tab menu; 'ul' element. 

Whenever this class is being targeted, swap the property variables (scale 0 / 1), hidding the icon '☰' and showing 'X' icon.  */

.nav__container {
    width: 90%;
    margin: 0 auto;
    height: 70px;

    display: grid;
    grid-template-columns: max-content max-content;
    grid-template-areas: "title img";
    justify-content: space-between;
    align-items: center;
    
    overflow: hidden;
}
/* top-header */

.nav__title {
    color: black;
    grid-area: title;
}
/* Home */

.nav__menu {
    grid-area: img;
    position: relative;
    z-index: 10;
    /* Icons will be always at the front */

    transform: var(--img1);
    /* Is a control property to change wich img will be shown: 
    Works as a switch ON as it scales the img to 1*/
}
/* buttons */

.nav__menu--second {
    transform: var(--img2);
    /* Works as a switch OFF  as it scales the image to 0*/
    /* Wouldn't be better to name them as ON/OFF? */
}

.nav__icons {
    width: 30px;
    display: block;
}
/* Controls the icon's size */