:root {
  /* LAYOUT SETTINGS */
  --aside-width: clamp(12rem, 20rem, 10svw);
  --grid-max-width: 80rem; /* == 1280px */
  --padding-inline: 1rem;
}


/* BREAKOUT GRID (No containers) 
Kevin Powell variation of the SMOL breakout grid  */

/* LANDING PAGE (Movile-first) */

.content-grid {

  /* Maximum width size for the breakout container */
  --breakout-max-width: var(--grid-max-width);
     
  /* Calculates the content's width*/
  --content-max-width: var(--breakout-max-width) * 0.75;
    
  /* Calculates the relative size of each extra space of the breakout width size: 
  Substract the content width of the breakout width and divide it by half for each 
  gutter on the sides */
  --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);
  
  display: grid;
  grid-template-columns:
    [full-width-start] minmax(var(--padding-inline), 1fr)
    [breakout-start] minmax(0, var(--breakout-size))
    [content-start] min(
      100% - (var(--padding-inline) * 2),
      var(--content-max-width)
    )
    [content-end]
    minmax(0, var(--breakout-size)) [breakout-end]
    minmax(var(--padding-inline), 1fr) [full-width-end];
}

  
.content-grid > :not(.breakout, .full-width),
.full-width > :not(.breakout, .full-width) {
  grid-column: content;
}
  
.content-grid > .breakout {
  grid-column: breakout;
}
  
.content-grid > .full-width {
  grid-column: full-width;
  
  /* Allows to use the grid of it's parent container */
  display: grid;
  grid-template-columns: inherit;
}
  
img.full-width {
  width: 100%;
  max-height: 45vh;
  object-fit: cover;
}

/* [This should go upper in the document, however I will let this here
because this are not my brand's ruleset] */

:root {
  --color-scheme: dark;
  /* --color-scheme: light; */
  
    --font-family: system-ui;
  
    --fs-300: clamp(0.94rem, calc(0.92rem + 0.08vw), 0.98rem);
    --fs-400: clamp(1.13rem, calc(1.06rem + 0.33vw), 1.31rem);
    --fs-500: clamp(1.35rem, calc(1.21rem + 0.69vw), 1.75rem);
    --fs-600: clamp(1.62rem, calc(1.37rem + 1.24vw), 2.33rem);
    --fs-700: clamp(1.94rem, calc(1.54rem + 2.03vw), 3.11rem);
    --fs-800: clamp(2.33rem, calc(1.7rem + 3.15vw), 4.14rem);
    --fs-900: clamp(2.8rem, calc(1.85rem + 4.74vw), 5rem); /* If it overflow in small sizes, reduce the last value*/
  
    --clr-primary-300: hsl(219, 76%, 55%);
    --clr-primary-400: hsl(219, 76%, 40%);
    --clr-primary-500: hsl(219, 76%, 25%);
    --clr-secondary-300: hsl(269, 75%, 55%);
    --clr-secondary-400: hsl(269, 75%, 40%);
    --clr-secondary-500: hsl(269, 75%, 25%);
    --clr-accent-200: hsl(358, 85%, 80%);
    --clr-accent-300: hsl(358, 72%, 65%);
    --clr-accent-400: hsl(358, 72%, 50%);
    --clr-accent-500: hsl(358, 72%, 35%);
  }
  
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  
  html {
    color-scheme: var(--color-scheme);
  }
  
  body {
    margin: 0;
    font-family: var(--font-family);
    font-size: var(--fs-400);
    line-height: 1.6;
  }
  
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  figure {
    margin: 0;
  }
  
  img {
    max-width: 100%;
    display: block;
  }
  
  .site-title {
    font-size: var(--fs-900);
    line-height: 1.05;
    text-transform: uppercase;
  }
  
  .section-title {
    font-size: var(--fs-800);
    line-height: 1.1;
  }
  
  .bg-primary {
    background: var(--clr-primary-500);
  }
  
  .visually-hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }
  
  .call-to-action {
    padding: 1rem;
    background: hsl(0 0% 100% / 0.15);
  }
  
  .wrapper {
    width: calc(100% - 3rem);
    max-width: 900px;
    margin-inline: auto;
  }
  
  .flow > * + * {
    margin-top: var(--flow-spacing, 1em);
  }
  
  .section-padding {
    padding-block: 2.5rem;
  }
  
  .primary-header {
    padding-block: 1rem;
    margin-block-end: 3rem;
    background: var(--clr-accent-200);
    color: var(--clr-primary-500);
  }
  
  .primary-header__layout {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  
  .logo {
    max-width: 250px;
  }
  
  nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    gap: max(5vw, 1rem);
  }
  
  nav a {
    color: inherit;
    text-decoration: none;
  }
  
  nav a:hover,
  nav a:focus {
    color: var(--clr-accent-500);
    text-decoration: underline;
  }
  
  .even-columns {
    display: flex;
    gap: 1rem;
  }


/* [ALTERNATIVE LAYOUTS] */

/* BLOG PAGE → Used for blog content (and will contain ads). */

body.blog-page .content-grid {
  --content-max-width: var(--breakout-max-width) * 0.5;
}

/* In order to properly work, there has to be a <div> containing
the main and at least one asides element. */

.holy-grail {
  max-width: var(--grid-max-width);
  margin: 0 auto;
  display: grid;
  grid-template: 
  "sidebar" 
  "main" 
  "ads";
}

.sidebar {
  grid-area: sidebar;
  width: var(--aside-width);
}

.main {
  grid-area: main;
}

.ads {
  grid-area: ads;
  width: var(--aside-width);
}


/* RESPONSIVE LAYOUT */

/* TABLETS */

@media (min-width: 640px) {
  .holy-grail {
    grid-template: 
    "sidebar    main"
    "ads        main" / 
    auto        1fr;
  }
}

/* DESKTOP */

@media (min-width: 960px) {
  .holy-grail {
    grid-template: 
    "sidebar   main    ads" /
    auto       1fr     auto ;
  }
}


/* WIKI PAGE → Used for project's documentation. */

/* Adjust the container width size in relation to the sidebar */
body.wiki-page .content-grid {
  --content-max-width: var(--breakout-max-width) * 0.625;
}

/* Hides auxiliar sidebar */
body.wiki-page :is(.ads) {
  display: none;
}


